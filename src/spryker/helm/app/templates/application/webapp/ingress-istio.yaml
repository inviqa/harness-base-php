{{ if and (index .Values.services .Values.ingress.target_service "enabled") (eq .Values.ingress.type "istio") }}
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: {{ .Release.Namespace }}-{{ .Values.resourcePrefix }}webapp-virtualservice
{{- with .Values.ingress.annotations }}
  annotations:
    {{- . | toYaml | nindent 4 }}
{{- end }}
  labels:
    {{- include "chart.labels" $ | nindent 4 }}
    app.kubernetes.io/component: webapp
    app: {{ .Values.resourcePrefix }}webapp
    app.service: {{ .Values.resourcePrefix }}webapp
spec:
  hosts:
{{- range $key, $value := (mergeOverwrite (dict) .Values.services.nginx.environment .Values.services.nginx.environment_dynamic) }}
{{- if and (contains "_HOST_" $key) $value }}
  - {{ $value | quote }}
{{- end }}
{{- end }}
  gateways:
{{- range $key, $value := .Values.istio.gateways }}
  - {{ tpl $value $ | quote }}
{{- end }}
{{- range $key, $value := .Values.istio.additionalGateways }}
  - {{ $value | quote }}
{{- end }}
  http:
  - route:
    - destination:
        host: {{ .Values.resourcePrefix }}{{ .Values.ingress.target_service }}
        port:
          number: 80
  {{- if .Values.ingress.tls }}
  tls:
  {{- toYaml .Values.ingress.tls | nindent 4 }}
  {{- end }}
{{ end }}
