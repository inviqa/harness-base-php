{{ if .Values.service.jenkins | default .Values.docker.services.jenkins.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.resourcePrefix }}jenkins
  annotations:
    argocd.argoproj.io/sync-wave: "4"
  labels:
    app.service: {{ .Values.resourcePrefix }}jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      app.service: {{ .Values.resourcePrefix }}jenkins
  template:
    metadata:
      labels:
        app.service: {{ .Values.resourcePrefix }}jenkins
    spec:
      containers:
      - env:
        - name: JAVA_OPTS
          value: -Djenkins.install.runSetupWizard=false
        image: {{ .Values.docker.services.jenkins.image | quote }}
        imagePullPolicy: Always
        name: jenkins
        ports:
        - containerPort: 8080
        resources:
          limits:
            memory: {{ .Values.resources.memory.jenkins }}
          requests:
            memory: {{ .Values.resources.memory.jenkins }}
        readinessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
      restartPolicy: Always
status: {}
{{ end }}
