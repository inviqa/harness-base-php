{{- with .Values.services.jenkins -}}
{{- if .enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $.Release.Name }}-jenkins
  annotations:
    argocd.argoproj.io/sync-wave: "4"
  labels:
    {{- include "chart.labels" $ | nindent 4 }}
    app.kubernetes.io/component: jenkins
    app.service: {{ $.Release.Name }}-jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      app.service: {{ $.Release.Name }}-jenkins
{{- if index $.Values.persistence "jenkins-home" "enabled" }}
  strategy:
    type: Recreate
{{- end }}
  template:
    metadata:
      labels:
        {{- include "chart.selectors" $ | nindent 8 }}
        app.kubernetes.io/component: jenkins
        app.service: {{ $.Release.Name }}-jenkins
    spec:
      {{- with (pick . "affinity") }}
      {{- . | toYaml | nindent 6 }}
      {{- end }}
      securityContext:
        fsGroup: 1000
      containers:
      - name: jenkins
        {{- include "service.environment" (dict "root" $ "serviceName" "jenkins" "service" .) | nindent 8 }}
        image: {{ .image | quote }}
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        resources:
          limits:
            memory: {{ .resources.memory }}
          requests:
            memory: {{ .resources.memory }}
        readinessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
        volumeMounts:
        - name: home
          mountPath: /var/jenkins_home
      restartPolicy: Always
      topologySpreadConstraints: {{- (include "pod.topologySpreadConstraints" (dict "root" $ "serviceName" "jenkins" "service" .)) | nindent 8 }}
      volumes:
      - name: home
{{- if index $.Values.persistence "jenkins-home" "enabled" }}
        persistentVolumeClaim:
          claimName: {{ $.Release.Name }}-jenkins-home
{{- else }}
        emptyDir: {}
{{- end }}
status: {}
{{- end }}
{{- end }}
