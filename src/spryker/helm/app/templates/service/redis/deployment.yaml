{{ if .Values.service.redis }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  labels:
    app.service: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app.service: redis
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.service: redis
    spec:
      containers:
      - args:
        - redis-server
        - --maxmemory
        - "1073742000"
        - --maxmemory-policy
        - allkeys-lru
        - --save
        - "3600"
        - "1"
        - --save
        - "300"
        - "100"
        - --save
        - "60"
        - "10000"
        image: redis:4-alpine
        imagePullPolicy: Always
        name: redis
        ports:
        - containerPort: 6379
        resources: {}
        readinessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 5
          periodSeconds: 10
        volumeMounts:
        - name: redis-persistent-storage
          mountPath: /data
      restartPolicy: Always
      volumes:
      - name: redis-persistent-storage
        persistentVolumeClaim:
          claimName: redis-pv-claim
status: {}
{{ end }}