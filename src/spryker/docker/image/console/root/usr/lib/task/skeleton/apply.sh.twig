#!/bin/bash

function task_skeleton_apply()
{
    if [ ! -f /app/composer.json ]; then
        fetch_demoshop
        merge_composer_json
    fi
    run rsync --exclude='*.twig' --exclude='_twig' --exclude='composer-harness.json' -a /home/build/application/skeleton/ /app/
}

function fetch_demoshop()
{
    run git clone --single-branch --branch "{{ @('spryker.demoshop-version')}}" "{{ @('spryker.demoshop-url') }}" /tmp/spryker
    run "shopt -s dotglob && mv /tmp/spryker/* /app"
    run rm -rf /tmp/spryker
    run rm -rf /app/.git
    run mv /app/LICENSE /app/demoshop.LICENSE
}

# Merge core composer.json with composer-harness.json
# Also removes a key from composer.json if it is set as null in composer-harness.json
# fetch new composer packages from composer-harness.json and run composer update
# only with those packages so that core spryker packages doesn't get update as well
function merge_composer_json()
{
    local core_file="/app/composer.json"
    local override_file="/home/build/application/skeleton/composer-harness.json"
    local merged_file="/app/composer-merged.json"

    run "jq -s '.[0] * .[1] | del(recurse(.[]?;true)|nulls)' $core_file $override_file > $merged_file"
    run mv "$merged_file" "$core_file"

    local shared_package_list=""
    local new_composer_packages=()
    shared_package_list="$(jq -r '.["require-dev"] * .["require"] | keys[]' $override_file | tr '\n' ' ')"
    IFS=" " read -r -a new_composer_packages <<< "$shared_package_list"

    {% verbatim %}
    [ "${#new_composer_packages[@]}" -gt 0 ] && passthru env COMPOSER_PROCESS_TIMEOUT=600 composer update --with-dependencies --no-interaction --profile "${new_composer_packages[@]}"
    {% endverbatim %}

    # Move web-profiler from packages-dev to packages due to broken dependencies
    composer require spryker/web-profiler:^1.6 spryker-shop/web-profiler-widget:^1.4
}
