attributes:
  akeneo:
    app:
      mode: dev # dev or prod
  php:
    job_queue_consumer:
      ini: = @('php.cli.ini')
  services:
    console:
      build:
        environment:
          PATH: "$PATH:/app/bin:/app/vendor/bin"
    php-base:
      environment:
        APP_DEBUG: "0"
        APP_ENV: "= (@('app.mode') == 'development' ? 'dev' : 'prod')"
        APP_DATABASE_HOST: = @('database.host')
        APP_DATABASE_PORT: = @('database.port')
        APP_DATABASE_NAME: = @('database.name')
        APP_DATABASE_USER: = @('database.user')
        APP_DEFAULT_LOCALE: en
        APP_INDEX_HOSTS: elasticsearch:9200
        APP_PRODUCT_AND_PRODUCT_MODEL_INDEX_NAME: akeneo_pim_product_and_product_model
        MAILER_URL: null://localhost
        AKENEO_PIM_URL: = "https://" ~ @('hostname')
      environment_secrets:
        AKENEO_SECRET: = @('akeneo.secret')
        APP_DATABASE_PASSWORD: = @('database.pass')
        APP_SECRET: = @('akeneo.secret')
    job-queue-consumer:
      extends:
        - php-base
      enabled: "= 'job-queue-consumer' in @('app.services')"
      image: = @('docker.repository') ~ ':' ~ @('app.version') ~ '-job-queue-consumer'
      publish: = @('services.job-queue-consumer.enabled')
      environment:
        AUTOSTART_AKENEO_JOB_QUEUE_CONSUMER: "true"
        AKENEO_JOB_QUEUE_CONSUMER_PROCESSES: 5
      resources:
        memory: "1024Mi"
  pipeline:
    base:
      services:
        job-queue-consumer:
          initContainers:
            volumePermissions:
              image: = @('pipeline.base.services.webapp.initContainers.volumePermissions.image')
              recursive: = @('pipeline.base.services.webapp.initContainers.volumePermissions.recursive')
        php-base:
          environment:
            APP_HOST: = @('pipeline.base.hostname')
            PHP_IDE_CONFIG: = ''
    qa:
      services:
        php-base:
          environment:
            APP_HOST: = @('pipeline.qa.hostname')
    preview:
      persistence:
        enabled: true
        akeneo:
          file_storage:
            storageClass: nfs
          uploads:
            storageClass: nfs
