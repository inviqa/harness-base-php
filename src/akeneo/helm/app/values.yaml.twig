{% set blocks  = 'helm/app/_twig/values.yaml/' %}

environment:
{% include blocks ~ 'environment.yml.twig' %}

feature: {{ to_nice_yaml(@('helm.feature'), 2, 2) | raw }}

ingress:
  target_service: {{ ("varnish" in @('app.services') ? 'varnish' : 'webapp') }}
  type: "standard" # standard or istio

docker:
  image_pull_config: {{ @('docker.image_pull_config') | raw }}
  image:
    console: {{ @('docker.repository') ~ ':' ~ @('app.version') ~ '-console' }}
    cron: {{ @('docker.repository') ~ ':' ~ @('app.version') ~ '-cron' }}
    elasticsearch: {{ @('elasticsearch.image') ~ ':' ~ @('elasticsearch.tag') }}
    fpm: {{ @('docker.repository') ~ ':' ~ @('app.version') ~ '-php-fpm' }}
    job_queue_consumer: {{ @('docker.repository') ~ ':' ~ @('app.version') ~ '-job-queue-consumer' }}
    mysql: {{ @('mysql.image') ~ ':' ~ @('mysql.tag') }}
    nginx: {{ @('docker.repository') ~ ':' ~ @('app.version') ~ '-nginx' }}
    rabbitmq: {{ @('rabbitmq.image') ~ ':' ~ @('rabbitmq.tag') }}
    php_fpm_exporter: {{ @('docker.repository') ~ ':' ~ @('app.version') ~ '-php-fpm-exporter' }}
  services: {{ to_nice_yaml(deep_merge([
      filter_local_services(@('services')),
      @('pipeline.base.services')
    ]), 2, 4) | raw }}

# deprecated, use docker.services.*.enabled instead
service: {}

replicas: {{ to_nice_yaml(@('replicas'), 2, 2) | raw }}

resources:
{% include blocks ~ 'resources.yml.twig' %}

persistence: {{ to_nice_yaml(@('pipeline.base.persistence'), 2, 2) | raw }}

prometheus: {{ to_nice_yaml(@('pipeline.base.prometheus'), 2, 2) | raw }}

resourcePrefix: {{ @('pipeline.base.resourcePrefix') | json_encode | raw }}

istio: {{ to_nice_yaml(@('pipeline.base.istio'), 2, 2) | raw }}
