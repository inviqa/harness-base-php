
server {

  listen 80 default_server;
  listen 443 ssl http2 default_server;

  server_name _;

  include snippets/certificate.conf;
  include snippets/ssl-params.conf;

  {% for name, value in @('nginx.site.conf') %}
    {{ name }} {{ value }};
  {% endfor %}

  set $custom_https $https;
  set $custom_scheme $scheme;
  if ($http_x_forwarded_proto) {
    set $custom_scheme $http_x_forwarded_proto;
  }
  if ($http_x_forwarded_proto = https) {
    set $custom_https on;
  }

  root {{ @('app.web_directory') }};
  index index.html;

  location ~ ^/composer\.json(/|$) {
    deny all;
  }
  location ~ ^/composer\.lock(/|$) {
    deny all;
  }
  location ~ /\.ht[^/]*$ {
    deny all;
  }
  location ~ ^/\.gitignore(/|$) {
    deny all;
  }
  location {{ @('wordpress.url_prefix') }}wp-admin/includes/ {
    deny all;
  }

  # Global restrictions configuration file.
  # Designed to be included in any server {} block.
  location = /favicon.ico {
    log_not_found off;
    access_log off;
  }
  # robots.txt fallback to index.php
  location = /robots.txt {
  # Some WordPress plugin gererate robots.txt file
    allow all;
    try_files $uri $uri/ {{ @('wordpress.url_prefix') }}index.php?$args @robots;
    access_log off;
    log_not_found off;
  }
  # additional fallback if robots.txt doesn't exist
  location @robots {
    return 200 "User-agent: *\nDisallow: {{ @('wordpress.url_prefix') }}wp-admin/\nAllow: {{ @('wordpress.url_prefix') }}wp-admin/admin-ajax.php\n";
  }

  # Deny all attempts to access hidden files such as .htaccess, .htpasswd, .DS_Store (Mac) excepted .well-known directory.
  # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
  location ~ /\.(?!well-known\/) {
    deny all;
  }

  # Deny access to any files with a .php extension in the uploads directory for the single site
  location {{ @('wordpress.url_prefix') }}wp-content/uploads {
    location ~ \.php$ {
      deny all;
    }
  }

  # Deny access to any files with a .php extension in the uploads directory
  # Works in sub-directory installs and also in multisite network
  # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
  location ~* /(?:uploads|files)/.*\.php$ {
    deny all;
  }

{% if @('wordpress.url_prefix') != '/' %}
  location / {
    deny all;
  }
{% endif %}

  location {{ @('wordpress.url_prefix') }} {
    try_files $uri @rewriteapp;
  }

  location @rewriteapp {
    rewrite ^(.*)$ {{ @('wordpress.url_prefix') }}index.php/$1 last;
  }

  location ~ \.php(/|$) {
    fastcgi_pass ${FPM_HOST}:9000;
    fastcgi_split_path_info ^(.+\.php)(/.*)$;
    include fastcgi_params;
    fastcgi_param HTTPS $custom_https;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;

    fastcgi_param PATH_TRANSLATED $document_root$fastcgi_path_info;
    fastcgi_param PATH_INFO $fastcgi_path_info;
    fastcgi_param HTTP_PROXY "";
  }

  gzip on;
  gzip_disable "msie6";

  gzip_comp_level 6;
  gzip_min_length 1100;
  gzip_buffers 16 8k;
  gzip_proxied any;
  gzip_types
    text/plain
    text/css
    text/js
    text/xml
    text/javascript
    application/javascript
    application/x-javascript
    application/json
    application/xml
    application/xml+rss
    image/svg+xml;
  gzip_vary on;

  # Banned locations (only reached if the earlier PHP entry point regexes don't match)
  location ~* (\.php$|\.htaccess$|\.git) {
    deny all;
  }
}
