attributes.default:
  services:
    php-base:
      environment:
        HOST_OS_FAMILY: = @('host.os')
        APP_NAME: = @('workspace.name')
        APP_HOST: = @('hostname')
        DB_PLATFORM: = @('database.platform')
        DB_PLATFORM_VERSION: = @('database.platform_version')
        DB_HOST: = @('database.host')
        DB_PORT: = @('database.port')
        DB_USER: = @('database.user')
        DB_NAME: = @('database.name')
        ELASTICSEARCH_HOST: >
          = @('searchengine.platform') in ['elasticsearch', 'opensearch']
          ? @('searchengine.host')
          : ''
        ELASTICSEARCH_PORT: >
          = @('searchengine.platform') in ['elasticsearch', 'opensearch']
          ? @('searchengine.port')
          : ''
        SEARCHENGINE_PLATFORM: "= @('searchengine.platform')"
        SEARCHENGINE_PLATFORM_VERSION: "= @('searchengine.platform_version')"
        SEARCHENGINE_HOST: = @('searchengine.host')
        SEARCHENGINE_PORT: = @('searchengine.port')
        RABBITMQ_API_PORT: = @('rabbitmq.api_port')
        RABBITMQ_EXTERNAL_HOST: = @('rabbitmq.external_host')
        RABBITMQ_HOST: = @('rabbitmq.host')
        RABBITMQ_PORT: = @('rabbitmq.port')
        RABBITMQ_USER: = @('rabbitmq.user')
        RABBITMQ_VHOST: = @('rabbitmq.vhosts.default')
        REDIS_HOST: = @('redis.host')
        REDIS_PORT: = @('redis.port')
        REDIS_SESSION_HOST: = @('redis-session.host')
        REDIS_SESSION_PORT: = @('redis-session.port')
        SOLR_HOST: = @('services.solr.host')
        SOLR_PORT: = @('services.solr.port')
        SMTP_HOST: = @('smtp.host')
        SMTP_PORT: = @('smtp.port')
        PHP_IDE_CONFIG: "serverName=workspace"
        TIDEWAYS_HOST: tideways
        VARNISH_HOSTNAME_TEMPLATE: "varnish-%d.varnish-headless"
      environment_secrets:
        DB_PASS: = @('database.pass')
        RABBITMQ_PASSWORD: = @('rabbitmq.password')
        TIDEWAYS_APIKEY: ""
    nginx:
      image: = @('docker.repository') ~ ':' ~ @('app.version') ~ '-nginx'
      publish: true
      environment:
        FPM_HOST: php-fpm
      resources:
        memory: "100Mi"
    console:
      extends:
        - php-base
      build:
        from: "= 'my127/php:' ~ @('php.version') ~ '-fpm-' ~ @('php.distro_codename') ~ '-console'"
      environment:
        DB_ADMIN_USER: root
        HAS_VARNISH: "= @('services.varnish.enabled') ? 'true' : 'false'"
        HISTFILE: "= @('app.code_owner_home') ~ '/.console/.bash_history'"
      environment_secrets:
        DB_ADMIN_PASS: = @('database.root_pass')
        ADMIN_DEFAULT_PASSWORD: admin123
      resources:
        memory: "2048Mi"
        init_memory: "1024Mi"
        migrate_memory: "1024Mi"
    cron:
      extends:
        - php-base
      image: = @('docker.repository') ~ ':' ~ @('app.version') ~ '-cron'
      publish: "= @('services.cron.enabled')"
      resources:
        memory: "1024Mi"
    php-fpm:
      extends:
        - php-base
      build:
        from: "= 'my127/php:' ~ @('php.version') ~ '-fpm-' ~ @('php.distro_codename')"
      image: = @('docker.repository') ~ ':' ~ @('app.version') ~ '-php-fpm'
      publish: true
      environment:
        AUTOSTART_PHP_FPM: "true"
      resources:
        memory: "1024Mi"
    php-fpm-exporter:
      image: hipages/php-fpm_exporter:2.2
      environment:
        PHP_FPM_SCRAPE_URI: = php_fpm_exporter_scrape_url('php-fpm', @('php-fpm.pools'))
      resources:
        memory: "100Mi"
    blackfire:
      image: blackfire/blackfire:latest
      environment:
        BLACKFIRE_AGENT_TIMEOUT: 10
        BLACKFIRE_LOG_LEVEL: 1
      environment_secrets:
        BLACKFIRE_CLIENT_ID: ""
        BLACKFIRE_CLIENT_TOKEN: ""
        BLACKFIRE_SERVER_ID: ""
        BLACKFIRE_SERVER_TOKEN: ""
    lighthouse: {}
    tideways:
      image: quay.io/inviqa_images/tideways:latest
      environment:
        TIDEWAYS_HOSTNAME: = @('hostname')
        TIDEWAYS_ENV: production
      resources:
        memory: "256Mi"
    # webapp is by default two services combined, nginx and php-fpm
    webapp:
      enabled: true
      containers:
        - php-fpm
        - php-fpm-exporter # only is added if podMonitoring is enabled
        - nginx
  pipeline:
    base:
      services:
        php-base:
          environment:
            APP_HOST: = @('pipeline.base.hostname')
            DB_HOST: = '{{ .Release.Name }}-' ~ @('database.host')
            ELASTICSEARCH_HOST: >
              {{ if .Values.services.elasticsearch.enabled }}{{ .Release.Name  }}-elasticsearch{{ end }}
              {{ if .Values.services.opensearch.enabled }}{{ .Release.Name  }}-opensearch{{ end }}
            SEARCHENGINE_HOST: >
              {{ if .Values.services.elasticsearch.enabled }}{{ .Release.Name  }}-elasticsearch{{ end }}
              {{ if .Values.services.opensearch.enabled }}{{ .Release.Name  }}-opensearch{{ end }}
              {{ if .Values.services.solr.enabled }}{{ .Release.Name  }}-solr{{ end }}
            RABBITMQ_HOST: '{{ if .Values.services.rabbitmq.enabled }}{{ .Release.Name }}-rabbitmq{{ end }}'
            RABBITMQ_EXTERNAL_HOST: = @('pipeline.preview.rabbitmq.external_host')
            REDIS_HOST: '{{ if .Values.services.redis.enabled }}{{ .Release.Name }}-redis{{ end }}'
            REDIS_SESSION_HOST: '{{ if (index .Values.services "redis-session" "enabled") }}{{ .Release.Name }}-redis-session{{ end }}'
            SOLR_HOST: '{{ if (.Values.services.solr.enabled) }}{{ .Release.Name }}-solr{{ end }}'
            PHP_IDE_CONFIG: = ''
            TIDEWAYS_HOST: "{{ .Release.Name }}-tideways"
            TIDEWAYS_ENABLED: "{{ .Values.services.tideways.enabled | default false | toString }}"
            VARNISH_HOSTNAME_TEMPLATE: "{{ .Release.Name }}-varnish-%d.{{ .Release.Name }}-varnish-headless"
        console:
          environment:
            TIDEWAYS_ENABLED: "= @('php.ext-tideways.cli.enable') ? '{{ .Values.services.tideways.enabled | default false | toString }}' : 'false'"
            HISTFILE: "= @('app.code_owner_home') ~ '/.bash_history'"
        elasticsearch:
          tag: >
            = (
                @('searchengine.platform') == 'elasticsearch' and 
                version_compare(@('searchengine.platform_version'), '8', '<')
              ) ? '7.17.16'
            : (
                @('searchengine.platform') == 'elasticsearch' and 
                version_compare(@('searchengine.platform_version'), '7', '<')
              ) ? '6.8.23'
            : '8.11.3'
        nginx:
          environment:
            FPM_HOST: localhost
        php-fpm-exporter:
          environment:
            PHP_FPM_SCRAPE_URI: = php_fpm_exporter_scrape_url('127.0.0.1', @('php-fpm.pools'))
          metricsEndpoints:
            - port: php-fpm-metrics
        tideways:
          environment:
            TIDEWAYS_HOSTNAME: = @('pipeline.base.hostname')
        cron:
          initContainers:
            volumePermissions:
              image: = @('pipeline.base.services.webapp.initContainers.volumePermissions.image')
              recursive: = @('pipeline.base.services.webapp.initContainers.volumePermissions.recursive')
        webapp:
          initContainers:
            volumePermissions:
              image: busybox:1.35
              recursive: true
          metricsEnabled: true
      ingresses:
        webapp:
          target_service: "= @('services.varnish.enabled') ? 'varnish' : 'webapp'"
          # standard or istio
          type: standard
    production:
      # assumption is that in a production style environment these would be
      # managed services outside of the applications control
      services:
        elasticsearch:
          enabled: false
        memcached:
          enabled: false
        mysql:
          enabled: false
        postgres:
          enabled: false
        redis:
          enabled: false
        redis-session:
          enabled: false
    qa:
      services:
        php-base:
          environment:
            APP_HOST: = @('pipeline.qa.hostname')
            RABBITMQ_EXTERNAL_HOST: = @('pipeline.qa.rabbitmq.external_host')
            SMTP_HOST: = @('pipeline.qa.smtp.host')
            SMTP_PORT: = @('pipeline.qa.smtp.port')
        tideways:
          environment:
            TIDEWAYS_HOSTNAME: = @('pipeline.qa.hostname')
    preview:
      services:
        console:
          enabled: false
          resources:
            memory: "1024Mi"
        nginx:
          resources:
            memory: "64Mi"
        php-base:
          environment:
            SMTP_HOST: = @('pipeline.preview.smtp.host')
            SMTP_PORT: = @('pipeline.preview.smtp.port')
        php-fpm-exporter:
          resources:
            memory: "32Mi"
