attributes:
  services:
    php-base:
      environment:
        HOST_OS_FAMILY: = @('host.os')
        APP_NAME: = @('workspace.name')
        APP_HOST: = @('hostname')
        DB_PLATFORM: = @('database.platform')
        DB_PLATFORM_VERSION: = @('database.platform_version')
        DB_HOST: = @('database.host')
        DB_PORT: = @('database.port')
        DB_USER: = @('database.user')
        DB_NAME: = @('database.name')
        ELASTICSEARCH_HOST: = @('elasticsearch.host')
        ELASTICSEARCH_PORT: = @('elasticsearch.port')
        RABBITMQ_API_PORT: = @('rabbitmq.api_port')
        RABBITMQ_EXTERNAL_HOST: = @('rabbitmq.external_host')
        RABBITMQ_HOST: = @('rabbitmq.host')
        RABBITMQ_PORT: = @('rabbitmq.port')
        RABBITMQ_USER: = @('rabbitmq.user')
        RABBITMQ_VHOST: = @('rabbitmq.vhosts.default')
        REDIS_HOST: = @('redis.host')
        REDIS_PORT: = @('redis.port')
        REDIS_SESSION_HOST: = @('redis_session.host')
        REDIS_SESSION_PORT: = @('redis_session.port')
        PHP_IDE_CONFIG: "serverName=workspace"
        VARNISH_HOSTNAME_TEMPLATE: "varnish-%d.varnish-headless"
      environment_secrets:
        DB_PASS: = @('database.pass')
        RABBITMQ_PASSWORD: = @('rabbitmq.password')
    nginx:
      image: = @('docker.repository') ~ ':' ~ @('app.version') ~ '-nginx'
      publish: true
      environment:
        FPM_HOST: php-fpm
    console:
      enabled: true
      image: = @('docker.repository') ~ ':' ~ @('app.version') ~ '-console'
      publish: true
      environment:
        DB_ADMIN_USER: root
        HAS_VARNISH: "= ('varnish' in @('app.services') ? 'true' : 'false')"
      environment_secrets:
        DB_ADMIN_PASS: = @('database.root_pass')
    cron:
      enabled: "= 'cron' in @('app.services')"
      image: = @('docker.repository') ~ ':' ~ @('app.version') ~ '-cron'
      publish: "= 'cron' in @('app.services')"
    php-fpm:
      image: = @('docker.repository') ~ ':' ~ @('app.version') ~ '-php-fpm'
      publish: true
      environment:
        AUTOSTART_PHP_FPM: "true"
    php-fpm-exporter:
      image: hipages/php-fpm_exporter
      environment:
        PHP_FPM_SCRAPE_URI: = php_fpm_exporter_scrape_url('php-fpm', @('php-fpm.pools'))
    elasticsearch:
      enabled: "= 'elasticsearch' in @('app.services')"
      image: = @('elasticsearch.image') ~ ':' ~ @('elasticsearch.tag')
    memcached:
      enabled: "= 'memcached' in @('app.services')"
      image: memcached:1-alpine
    mysql:
      enabled: "= 'mysql' in @('app.services')"
      image: = @('mysql.image') ~ ':' ~ @('mysql.tag')
      environment:
        MYSQL_DATABASE: = @('database.name')
        MYSQL_USER: = @('database.user')
      environment_secrets:
        MYSQL_PASSWORD: = @('database.pass')
        MYSQL_ROOT_PASSWORD: = @('database.root_pass')
    postgres:
      enabled: "= 'postgres' in @('app.services')"
      image: postgres:9.6
      environment:
        POSTGRES_DB: = @('database.name')
        POSTGRES_USER: = @('database.user')
        PGDATA: /var/lib/postgresql/data/pgdata
      environment_secrets:
        POSTGRES_PASSWORD: = @('database.pass')
    rabbitmq:
      enabled: "= 'rabbitmq' in @('app.services')"
      image: = @('rabbitmq.image') ~ ':' ~ @('rabbitmq.tag')
      environment:
        RABBITMQ_DEFAULT_USER: = @('rabbitmq.user')
        RABBITMQ_DEFAULT_VHOST: = @('rabbitmq.vhosts.default')
      environment_secrets:
        RABBITMQ_DEFAULT_PASS: = @('rabbitmq.password')
        RABBITMQ_ERLANG_COOKIE: = @('rabbitmq.erlang_cookie')
    redis:
      enabled: "= 'redis' in @('app.services')"
      image: redis:4-alpine
    redis_session:
      enabled: "= 'redis_session' in @('app.services')"
      image: redis:4-alpine
    varnish:
      enabled: "= 'varnish' in @('app.services')"
      image: varnish:6
      environment:
        VARNISH_SIZE: "1024M"
  pipeline:
    base:
      prometheus:
        podMonitoring: false
      services:
        php-base:
          environment:
            APP_HOST: = @('pipeline.base.hostname')
            DB_HOST: = '{{ .Values.resourcePrefix }}' ~ @('database.host')
            ELASTICSEARCH_HOST: '{{ if .Values.service.elasticsearch }}{{ .Values.resourcePrefix  }}elasticsearch{{ end }}'
            ES_HOST: '{{ if .Values.service.elasticsearch }}{{ .Values.resourcePrefix }}elasticsearch:9200{{ end }}'
            RABBITMQ_HOST: '{{ if .Values.service.rabbitmq }}{{ .Values.resourcePrefix  }}rabbitmq{{ end }}'
            RABBITMQ_EXTERNAL_HOST: = @('pipeline.preview.rabbitmq.external_host')
            REDIS_HOST: '{{ if .Values.service.redis }}{{ .Values.resourcePrefix }}redis{{ end }}'
            REDIS_SESSION_HOST: '{{ if .Values.service.redis_session }}{{ .Values.resourcePrefix }}redis-session{{ end }}'
            PHP_IDE_CONFIG: = ''
            VARNISH_HOSTNAME_TEMPLATE: "{{ .Values.resourcePrefix }}varnish-%d.{{ .Values.resourcePrefix }}varnish-headless"
        nginx:
          environment:
            FPM_HOST: localhost
          ingress:
            annotations: {}
          metricsEnabled: false
          metricsEndpoints:
            - port: http
        php-fpm-exporter:
          environment:
            PHP_FPM_SCRAPE_URI: = php_fpm_exporter_scrape_url('127.0.0.1', @('php-fpm.pools'))
          metricsEnabled: true
          metricsEndpoints:
            - port: php-fpm-metrics
      istio:
        gateways:
          - "istio-system/{{ .Release.Namespace }}-gateway"
        additionalGateways: []
    production:
      # assumption is that in a production style environment these would be
      # managed services outside of the applications control
      services:
        elasticsearch:
          enabled: false
        memcached:
          enabled: false
        mysql:
          enabled: false
        postgres:
          enabled: false
        redis:
          enabled: false
        redis_session:
          enabled: false
    qa:
      services:
        php-base:
          environment:
            APP_HOST: = @('pipeline.qa.hostname')
            RABBITMQ_EXTERNAL_HOST: = @('pipeline.qa.rabbitmq.external_host')
    preview:
      resources:
        memory:
          app_init: "1024Mi"
          app_migrate: "1024Mi"
          console: "1024Mi"
          cron: "1024Mi"
          elasticsearch: "1024Mi"
          mysql: "512Mi"
          nginx: "64Mi"
          php_fpm: "1024Mi"
          php_fpm_exporter: "32Mi"
          postgres: "512Mi"
          redis: "64Mi"
          redis_session: "64Mi"
      services:
        console:
          enabled: false
