{{ if .Values.service.postgres }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    app.service: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app.service: postgres
  template:
    metadata:
      labels:
        app.service: postgres
    spec:
      containers:
      - env:
        - name: POSTGRES_DB
          value: {{ .Values.environment.DB_NAME }}
        - name: POSTGRES_PASSWORD
          value: {{ .Values.environment.DB_PASS }}
        - name: POSTGRES_USER
          value: {{ .Values.environment.DB_USER }}
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        image: postgres:9.6
        imagePullPolicy: Always
        name: postgres
        ports:
        - containerPort: 5432
        resources: {}
        readinessProbe:
          tcpSocket:
            port: 5432
          initialDelaySeconds: 5
          periodSeconds: 10
        volumeMounts:
        - name: postgres-persistent-storage
          mountPath: /var/lib/postgresql/data
      restartPolicy: Always
      volumes:
      - name: postgres-persistent-storage
        persistentVolumeClaim:
          claimName: postgres-pv-claim
status: {}
{{ end }}
