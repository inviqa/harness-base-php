apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.resourcePrefix }}webapp
  labels:
    app.service: {{ .Values.resourcePrefix }}webapp
  annotations:
    argocd.argoproj.io/sync-wave: "15"
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app.service: {{ .Values.resourcePrefix }}webapp
  template:
    metadata:
      labels:
        app.service: {{ .Values.resourcePrefix }}webapp
    spec:
      {{- if not (eq "" (include "application.volumes.wwwDataPaths" .)) }}
      initContainers:
      - name: webapp-volume-permissions
        image: busybox
        command:
        - "/bin/chown"
        - "-R"
        - "www-data"
        {{- include "application.volumes.wwwDataPaths" . | indent 8 }}
        volumeMounts:
        {{- if not (and (eq "" (include "application.volumeMounts.backend" .)) (eq "" (include "application.volumeMounts.all" .)) ) }}
        {{- include "application.volumeMounts.backend" . | indent 8 }}
        {{- include "application.volumeMounts.all" . | indent 8 }}
        {{- else }} []
        {{- end }}
      {{- end }}
      containers:
      - name: nginx
        env:
        {{- range $key, $value := .Values.docker.services.nginx.environment }}
        {{- $tp := typeOf $value }}
        - name: {{ $key | quote }}
        {{- if eq $tp "string" }}
          value: {{ tpl $value $ | quote }}
        {{- else}}
          value: {{ $value | quote }}
        {{- end }}
        {{- end }}
        image: {{ .Values.docker.image.nginx }}
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 80
        resources:
          limits:
            memory: {{ .Values.resources.memory.nginx }}
          requests:
            memory: {{ .Values.resources.memory.nginx }}
        readinessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 10
        volumeMounts:
        {{- if not (eq "" (include "application.volumeMounts.all" .)) }}
        {{- include "application.volumeMounts.all" . | indent 8 }}
        {{- else }} []
        {{- end }}

      - name: php-fpm
        env:
        {{- range $key, $value := index .Values.docker.services "php-base" "environment" }}
        {{- $tp := typeOf $value }}
        - name: {{ $key | quote }}
        {{- if eq $tp "string" }}
          value: {{ tpl $value $ | quote }}
        {{- else}}
          value: {{ $value | quote }}
        {{- end }}
        {{- end }}
        {{- range $key, $value := index .Values.docker.services "php-fpm" "environment" }}
        {{- $tp := typeOf $value }}
        - name: {{ $key | quote }}
        {{- if eq $tp "string" }}
          value: {{ tpl $value $ | quote }}
        {{- else}}
          value: {{ $value | quote }}
        {{- end }}
        {{- end }}
        {{- range $key, $value := .Values.environment }}
        - name: {{ $key | quote }}
          value: {{ $value | quote }}
        {{- end }}
        image: {{ .Values.docker.image.fpm }}
        imagePullPolicy: Always
        ports:
        - containerPort: 9000
        resources:
          limits:
            memory: {{ .Values.resources.memory.php_fpm }}
          requests:
            memory: {{ .Values.resources.memory.php_fpm }}
        readinessProbe:
          tcpSocket:
            port: 9000
          initialDelaySeconds: 5
          periodSeconds: 10
        volumeMounts:
        {{- if not (and (eq "" (include "application.volumeMounts.backend" .)) (eq "" (include "application.volumeMounts.all" .)) ) }}
        {{- include "application.volumeMounts.backend" . | indent 8 }}
        {{- include "application.volumeMounts.all" . | indent 8 }}
        {{- else }} []
        {{- end }}

      {{ if .Values.service.php_fpm_exporter }}
      - name: php-fpm-exporter
        env:
        {{- range $key, $value := index .Values.docker.services "php-fpm-exporter" "environment" }}
        {{- $tp := typeOf $value }}
        - name: {{ $key | quote }}
        {{- if eq $tp "string" }}
          value: {{ tpl $value $ | quote }}
        {{- else}}
          value: {{ $value | quote }}
        {{- end }}
        {{- end }}
        image: hipages/php-fpm_exporter
        imagePullPolicy: Always
        ports:
        - name: php-fpm-metrics
          containerPort: 9253
        resources:
          limits:
            memory: {{ .Values.resources.memory.php_fpm_exporter }}
          requests:
            memory: {{ .Values.resources.memory.php_fpm_exporter }}
        readinessProbe:
          tcpSocket:
            port: 9253
          initialDelaySeconds: 5
          periodSeconds: 10
      {{ end }}

      imagePullSecrets:
      - name: {{ .Values.resourcePrefix }}docker-config
      restartPolicy: Always
      enableServiceLinks: false
      volumes:
      {{- if not (and (eq "" (include "application.volumes.backend" .)) (eq "" (include "application.volumes.all" .)) ) }}
      {{- include "application.volumes.backend" . | indent 6 }}
      {{- include "application.volumes.all" . | indent 6 }}
      {{- else }} []
      {{- end }}
status: {}
