#!/bin/bash

setup_app_networking()
{
    # make linux consistent with docker-for-mac
    if [ "${HOST_OS_FAMILY}" = "linux" ]; then
        DOCKER_INTERNAL_HOST="host.docker.internal"
        if ! grep $DOCKER_INTERNAL_HOST /etc/hosts > /dev/null ; then
            DOCKER_INTERNAL_IP=$(/sbin/ip route|awk '/default/ { print $3 }')
            echo -e "$DOCKER_INTERNAL_IP    $DOCKER_INTERNAL_HOST" | tee -a /etc/hosts > /dev/null
        fi
    fi
}

run_steps()
{
    # run any command required to be executed at docker startup
    {% for step in @('php.entrypoint.steps') -%}
    {{ step|raw }}
    {% else -%}
    :
    {% endfor %}
    {% for step in @('console.entrypoint.steps') -%}
    {{ step|raw }}
    {% else -%}
    :
    {% endfor %}

    # Clean up Tideways module loading if it's meant to be turned off
    if [ -n "$TIDEWAYS_ENABLED" ] && [ -f /usr/local/etc/php/conf.d/docker-php-ext-tideways.ini ]; then
      if [ "$TIDEWAYS_ENABLED" = "true" ]; then
          sed -i'' "s#tideways.connection=.*$#tideways.connection=tcp://$TIDEWAYS_HOST:9135#" /usr/local/etc/php/conf.d/docker-php-ext-tideways.ini
      else
          rm /usr/local/etc/php/conf.d/docker-php-ext-tideways.ini
      fi
    fi
}

bootstrap()
{
    setup_app_networking
    run_steps
}

bootstrap

if [ "${1:-}" == "sleep" ]; then
    exec /sbin/tini -- bash -c "$(printf "%q " "$@")"
else
    exec /sbin/tini -- "$@"
fi
